/* 
  가상클래스 : 가상의 선택자, 실제로 존재하지 않는 요소나 상태, 조건에 따라 스타일을 적용할 때 사용.

  가상클래스는 디테일하게 말하면 가상요소와 가상클래스로 구분
  가상요소 : 실제로 존재하지 않는 요소에 스타일 적용
  가상클래스 : 요소의 상태나 조건에 따라 스타일 적용
*/

.d1,.d2{
  width: 150px;
  height: 150px;
  background-color: darkred;
  color: white;
  margin: 20px;
  text-align: center;
  line-height: 150px;

  /* 변환 */
  /* s는 초를 의미함 */
  /* all은 모든 변환에 대해서 */
  transition: all 10s;
}

/* 가상클래스 */
/* 마우스 올리면... */
.d1:hover{
  background-color: cyan;
  width: 200px;
  height: 250px;
  line-height: 250px;
}

input{
  width: 150px;
  margin-left: 20px;
  transition: all 20s;
}

/* 태그가 클릭됐을때(포커스 받았을때) */
input:focus{
  width: 3000px;
}

/* 첫번째 자식 */
ul>li:first-child{
  background-color: goldenrod;
}

/* 마지막 자식 */
ul>li:last-child{
  background-color: peru;
}

/* 두번째 자식 */
ul>li:nth-child(2){
  background-color: lime;
}

/* even : 짝수, odd : 홀수 */
ul>li:nth-child(even){
  color: forestgreen;
}

/*
  frist-child는 태그의 종류보다 순서를 더 우선 시
  첫번째 자식이 span일 때만 적용!
*/
.d3>span:first-child{
  color: crimson; /* 적용 안됨 */
}

.d3>span:first-of-type{
  color: deepskyblue;
}

/* 태그가 여러종류 있을 때는 first-of-type, last-of-type, nth-of-type을 이용 */
.d3>p:last-of-type{
  color: yellow;
}