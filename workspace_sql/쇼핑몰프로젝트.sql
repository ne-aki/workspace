#도서 쇼핑몰 프로젝트 테이블

#1. 회원 테이블
#2. 도서카테고리 테이블
#3. 도서 정보 테이블
#4. 구매 테이블
#5. 장바구니 테이블

#회원 테이블
CREATE TABLE SHOP_MEMBER (
	MEM_ID VARCHAR(20) PRIMARY KEY
	, MEM_NAME VARCHAR(20) NOT NULL
	, MEM_TEL VARCHAR(20)					#010-1111-2222
	, MEM_ADDR VARCHAR(50)
	, ADDR_DETAIL VARCHAR(50)
	, MEM_EMAIL VARCHAR(50) UNIQUE
	, MEM_PW VARCHAR(20) NOT NULL
	, MEM_ROLE VARCHAR(10) NOT NULL DEFAULT 'USER' #관리자와 일반 사용자 구분(ADMIN, USER)
	, JOIN_DATE DATETIME DEFAULT SYSDATE()
);

#도서 카테고리 테이블
CREATE TABLE BOOK_CATEGORY (
	CATE_NUM INT PRIMARY KEY AUTO_INCREMENT
	, CATE_NAME VARCHAR(20) NOT NULL UNIQUE
);

INSERT INTO book_category VALUES (1, '소설');
INSERT INTO book_category VALUES (2, '인터넷/IT');
INSERT INTO book_category VALUES (3, '자기계발');
COMMIT;

#도서 정보 테이블
CREATE TABLE BOOK (
	BOOK_NUM INT PRIMARY KEY AUTO_INCREMENT
	, TITLE VARCHAR(20) NOT NULL
	, PUBLISHER VARCHAR(20) NOT NULL
	, PRICE INT NOT NULL
	, REG_DATE DATETIME DEFAULT SYSDATE() #쇼핑몰에 상품 등록한 날짜
	, BOOK_INTRO VARCHAR(50)
	, CATE_NUM INT REFERENCES book_category (CATE_NUM)
);

#도서 이미지 정보 테이블
CREATE TABLE BOOK_IMG (
	IMG_NUM INT PRIMARY KEY AUTO_INCREMENT
	, ORIGIN_IMG_NAME VARCHAR(100) #원본 파일명
	, ATTACHED_IMG_NAME VARCHAR(100) #첨부된 파일명
	, BOOK_NUM INT REFERENCES book (BOOK_NUM) ON DELETE CASCADE #이미지의 원본 도서 번호
	, IS_MAIN VARCHAR(3) #메인이미지 : 'Y', 서브이미지 : 'N'
);

#장바구니 테이블
CREATE TABLE SHOP_CART (
	CART_NUM INT PRIMARY KEY AUTO_INCREMENT
	, BOOK_NUM INT REFERENCES book (BOOK_NUM)
	, CART_CNT INT NOT NULL #장바구니에 담은 도서 수량
	, MEM_ID VARCHAR(20) REFERENCES shop_member (MEM_ID)
	, TOTAL_PRICE INT NOT NULL
	, CART_DATE DATETIME DEFAULT SYSDATE()
);


#서브쿼리
INSERT INTO shop_cart (
	BOOK_NUM
	, CART_CNT
	, MEM_ID
	, TOTAL_PRICE
) VALUES (
	1
	, 3
	, 'dlrmsgud1'
	, (SELECT PRICE
		FROM book
		WHERE BOOK_NUM = 5) * 3
);

#장바구니에 저장된 상품명, 가격, 수량, 총가격, 등록일
SELECT
	CART_NUM
	, CART_CNT
	, TOTAL_PRICE
	, CART_DATE
	, TITLE
	, PRICE
	, C.BOOK_NUM
FROM shop_cart C
INNER JOIN book B
ON C.BOOK_NUM = B.BOOK_NUM
WHERE MEM_ID = 'dlrmsgud1'
ORDER BY CART_DATE DESC;

SELECT * FROM book;

DELETE FROM book;

SELECT * FROM shop_member;


WHERE MEM_ID = '';

SELECT * FROM book;

SELECT * FROM book_category;

SELECT * FROM shop_cart;

UPDATE shop_member
SET
	MEM_PW = '1111'
	, MEM_ROLE = 'ADMIN'
WHERE MEM_ID = 'admin';
COMMIT;

UPDATE shop_cart
SET
	CART_CNT = CART_CNT + 2
	, TOTAL_PRICE = (
		SELECT PRICE
		FROM book
		WHERE BOOK_NUM = 1
	) * CART_CNT
WHERE MEM_ID = ''
AND BOOK_NUM = 1;

SELECT PRICE
FROM book
WHERE BOOK_NUM = 1;

#숫자에는 NULL값이 못 들어옴
SELECT MEM_ID
FROM shop_cart
WHERE BOOK_NUM = 18
AND MEM_ID = 'dlrmsgud1';

DELETE FROM shop_cart;
COMMIT;

#장바구니에 존재 여부 : 책번호, 회원아이디
#INSERT : 책번호, 회원아이디, 수량
#UPDATE : 책번호 , 회원아이디, 수량

#BOOK_IMG 테이블에 데이터 추가
INSERT INTO book_img (ORIGIN_IMG_NAME, ATTACHED_IMG_NAME, BOOK_NUM, IS_MAIN)
VALUES
('abc.jpg', 'aaa-bbb.jpg', 1, 'Y'),
('abc.jpg', 'aaa-bbb.jpg', 1, 'Y'),
('abc.jpg', 'aaa-bbb.jpg', 1, 'Y');

SELECT * FROM book_img;

ROLLBACK;

SELECT * FROM book;

#다음에 들어간 BOOK_NUM을 조회 (최대 BOOK_NUM + 1)
SELECT IFNULL(MAX(BOOK_NUM), 0) + 1
FROM book;

DELETE FROM book_img;
DELETE FROM book;
DELETE FROM shop_cart;
COMMIT;
SELECT * FROM book;
SELECT * FROM book_img;
DELETE FROM book
WHERE book_num = 6;

SELECT ATTACHED_IMG_NAME
FROM book_img
WHERE IS_MAIN = 'Y';

#도서의 제목, 가격, 메인이미지명
SELECT
	B.BOOK_NUM
	, TITLE
	, PRICE
	, ATTACHED_IMG_NAME
FROM book B INNER JOIN book_img I
ON B.BOOK_NUM = I.BOOK_NUM
WHERE IS_MAIN = 'Y';

SELECT
  B.BOOK_NUM
  , TITLE
  , PUBLISHER
  , PRICE
  , BOOK_INTRO
  , ATTACHED_IMG_NAME
FROM book B INNER JOIN book_img I
ON B.BOOK_NUM = I.BOOK_NUM
WHERE B.BOOK_NUM = 1;

SELECT ATTACHED_IMG_NAME
FROM book_img
WHERE BOOK_NUM = 1
AND IS_MAIN = 'N';

SELECT * FROM shop_member;

SELECT
  CART_NUM
  , CART_CNT
  , TOTAL_PRICE
  , CART_DATE
  , TITLE
  , PRICE
  , C.BOOK_NUM
  , ATTACHED_IMG_NAME
FROM shop_cart C
INNER JOIN book B
ON C.BOOK_NUM = B.BOOK_NUM
INNER JOIN book_img I
ON I.BOOK_NUM = C.BOOK_NUM
WHERE MEM_ID = 'dlrmsgud1'
AND IS_MAIN = 'Y'
ORDER BY CART_DATE DESC;
